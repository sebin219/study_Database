create database school;

use school;

CREATE TABLE DEPT
(
DEPTNO int(2),
DNAME VARCHAR(14),
LOC VARCHAR(13)
);

CREATE TABLE EMP(
EMPNO int(11),
ENAME VARCHAR(10),
JOB VARCHAR(9),
MGR int(11),
HIREDATE DATE,
SAL int(11),
COMM decimal(7,2),
DEPTNO int(2)
);

CREATE TABLE SALGRADE
(
GRADE int(11),
LOSAL  int(11),
HISAL  int(11)
);

CREATE TABLE BONUS
(
ENAME VARCHAR(10),
JOB VARCHAR(9),
SAL int(11),
COMM int(11)
);

INSERT INTO DEPT (DEPTNO, DNAME, LOC) 
VALUES
  (10, 'ACCOUNTING', 'NEW YORK'),
  (20, 'RESEARCH', 'DALLAS'),
  (30, 'SALES', 'CHICAGO'),
  (40, 'OPERATIONS', 'BOSTON');
  
INSERT INTO emp (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO) 
VALUES
  (7369, 'SMITH', 'CLERK', 7902, '1980-12-17 00:00:00', 800, NULL, 20),
  (7499, 'ALLEN', 'SALESMAN', 7698, '1981-02-20 00:00:00', 1600, 300, 30),
  (7521, 'WARD', 'SALESMAN', 7698, '1981-02-22 00:00:00', 1250, 500, 30),
  (7566, 'JONES', 'MANAGER', 7839, '1981-04-02 00:00:00', 2975, NULL, 20),
  (7654, 'MARTIN', 'SALESMAN', 7698, '1981-09-28 00:00:00', 1250, 1400, 30),
  (7698, 'BLAKE', 'MANAGER', 7839, '1981-05-01 00:00:00', 2850, NULL, 30),
  (7782, 'CLARK', 'MANAGER', 7839, '1981-06-09 00:00:00', 2450, NULL, 10),
  (7788, 'SCOTT', 'ANALYST', 7566, '1982-12-09 00:00:00', 3000, NULL, 20),
  (7839, 'KING', 'PRESIDENT', NULL, '1981-11-17 00:00:00', 5000, NULL, 10),
  (7844, 'TURNER', 'SALESMAN', 7698, '1981-09-08 00:00:00', 1500, 0, 30),
  (7876, 'ADAMS', 'CLERK', 7788, '1983-01-12 00:00:00', 1100, NULL, 20),
  (7900, 'JAMES', 'CLERK', 7698, '1981-12-03 00:00:00', 950, NULL, 30),
  (7902, 'FORD', 'ANALYST', 7566, '1981-12-03 00:00:00', 3000, NULL, 20),
  (7934, 'MILLER', 'CLERK', 7782, '1982-01-23 00:00:00', 1300, NULL, 10);

INSERT INTO salgrade (GRADE, LOSAL, HISAL)
VALUES
  (1, 700, 1200),
  (2, 1201, 1400),
  (3, 1401, 2000),
  (4, 2001, 3000),
  (5, 3001, 9999);
  
ALTER TABLE DEPT ADD (
CONSTRAINT PK_DEPT
PRIMARY KEY(DEPTNO));

ALTER TABLE EMP ADD (
CONSTRAINT PK_EMP
PRIMARY KEY(EMPNO));
 
ALTER TABLE EMP ADD (
CONSTRAINT FK_DEPTNO
FOREIGN KEY (DEPTNO)
REFERENCES DEPT (DEPTNO));

-- 부서별 총 급여 합계 및 평균 급여를 계산
SELECT DEPTNO, SUM(SAL) AS TOTAL_SAL, AVG(SAL) AS AVG_SAL
FROM EMP
GROUP BY DEPTNO;

-- 커미션이 NULL인 경우 0으로 대체하여 보여줌
SELECT ENAME, SAL, IFNULL(COMM, 0) AS COMM_REPLACED
FROM EMP;

SELECT * FROM EMP;

-- 급여에 따라 등급을 표시하는 예제
SELECT ENAME, SAL,
  CASE 
    WHEN SAL >= 3000 THEN 'High'
    WHEN SAL BETWEEN 2000 AND 2999 THEN 'Medium'
    ELSE 'Low'
  END AS SAL_LEVEL
FROM EMP;

-- 사원 이름과 직책을 하나의 문자열로 합쳐서 출력
SELECT ENAME, JOB, CONCAT(ENAME, ' is a ', JOB) AS EMP_INFO
FROM EMP;

-- 모든 사원 이름을 대문자로 출력
SELECT ENAME, UPPER(ENAME) AS UPPER_NAME
FROM EMP;

-- 직책 이름 중 'MANAGER'를 'MGR'로 바꿔 출력
SELECT ENAME, JOB, REPLACE(JOB, 'MANAGER', 'MGR') AS JOB_SHORT
FROM EMP;

INSERT INTO emp (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO) 
VALUES
  (8888, 'SONG', 'PARK', 8888, now(), 800, NULL, 20);
  
SELECT * FROM emp
order by empno desc;